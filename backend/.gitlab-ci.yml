stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

variables:
  DOCKER_IMAGE_PREFIX: "ai-powered-backend-"
  DOCKER_IMAGE_TAG: "$DOCKER_IMAGE_PREFIX$CI_COMMIT_REF_NAME"
  DOCKER_TLS_CERTDIR: "/certs"
  
build:
  environment: $CI_COMMIT_REF_NAME
  image: docker:20.10.16
  stage: build
  only:
    - staging
    - master
  services:
    - docker:20.10.16-dind
    
  before_script:
    - touch .env
    - echo "$ENV_FILE" > .env
    - echo "$docker_key" | docker login --username "$docker_username" --password-stdin

  script:
    - pwd
    - ls
    # - cat .env
    - docker build -t $DOCKER_IMAGE_TAG .
    - docker tag $DOCKER_IMAGE_TAG codistan/ai-powered-backend:$DOCKER_IMAGE_TAG
    - docker push codistan/ai-powered-backend:$DOCKER_IMAGE_TAG

deploy:
  environment: $CI_COMMIT_REF_NAME
  stage: deploy
  only:
    - staging
    - master

  before_script:
    - apt update
    - touch .env
    - mkdir ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$private_key" | tr -d '\r' | ssh-add -
    - chmod 700 /root/.ssh
    - ssh-keyscan -H "$hostname" >> ~/.ssh/known_hosts

  script:
    - ssh -o StrictHostKeyChecking=no $user@$hostname
    - ssh -o StrictHostKeyChecking=no $user@$hostname sudo docker login -u $docker_username -p $docker_key
    - ssh -o StrictHostKeyChecking=no $user@$hostname sudo docker image rm -f codistan/ai-powered-backend:$DOCKER_IMAGE_TAG || true
    - ssh -o StrictHostKeyChecking=no $user@$hostname sudo docker rm -f backend || true
    - ssh -o StrictHostKeyChecking=no $user@$hostname sudo docker pull codistan/ai-powered-backend:$DOCKER_IMAGE_TAG
    - ssh -o StrictHostKeyChecking=no $user@$hostname sudo docker image prune -f
    - ssh -o StrictHostKeyChecking=no $user@$hostname sudo docker run --name backend -d -it -p $CONTAINER_PORT:3001 codistan/ai-powered-backend:$DOCKER_IMAGE_TAG